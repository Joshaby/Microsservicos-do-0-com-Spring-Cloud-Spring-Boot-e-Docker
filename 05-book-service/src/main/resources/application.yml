spring:
  application:
    name: book-service

  datasource:
    url: jdbc:postgresql://${POSTGRES_URL}:5432/book-service
    username: postgres
    password: 1234567

  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
#        hbm2ddl:
#          delimiter: ;
#      jakarta:
#        persistence:
#          schema-generation:
#            create-source: metadata
#            scripts:
#              action: create
#              create-target: create.sql

    hibernate:
      ddl-auto: update

    show-sql: true

    open-in-view: false

  flyway:
    url: jdbc:postgresql://${POSTGRES_URL}:5432/book-service
    user: postgres
    password: 1234567

eureka:
  client:
    service-url:
      defaultZone: http://${NAMING_SERVER_URL}:8761/eureka

management:
  endpoints:
    web:
      base-path: /book-service/actuator
      exposure:
        include: '*'

  tracing:
    sampling:
      probability: 1

  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_URL}:9411/api/v2/spans

server:
  port: 8100

resilience4j:
  retry:
    instances:
      default:
        max-attempts: 5
        wait-duration: 1s
        enable-exponential-backoff: true
  ratelimiter:
    instances:
      default:
        limit-for-period: 2
        limit-refresh-period: 10s
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 10

springdoc:
  api-docs:
    path: /book-service/v3/api-docs
